Object.defineProperty(exports,"__esModule",{value:!0}),exports.RxStorageInstanceSharding=void 0;var e=require("rxdb/plugins/core"),n=require("rxjs"),t=require("./sharding-helper.js");exports.RxStorageInstanceSharding=function(){function a(t,a,r,s,i,c){this.changes$=new n.Subject,this.storage=t,this.databaseName=a,this.collectionName=r,this.schema=s,this.internals=i,this.options=c,this.primaryPath=(0,e.getPrimaryFieldOfPrimaryKey)(this.schema.primaryKey),this.internals.shardInstances.forEach(((n,t)=>{n.changeStream().subscribe((n=>{var a=(0,e.flatClone)(n);a.checkpoint={[t]:n.checkpoint},this.changes$.next(a)}))}))}var r=a.prototype;return r.bulkWrite=async function(n,a){for(var r=this.primaryPath,s=this.internals.shardInstances,i=s.length,c=new Array(i).fill(0).map((()=>[])),o=0;o<n.length;++o){var h=n[o],l=h.document[r];c[(0,t.getShardIndex)(i,l)].push(h)}var u={error:[]};return await Promise.all(c.map(((n,t)=>{if(n.length>0)return s[t].bulkWrite(n,a).then((n=>{(0,e.appendToArray)(u.error,n.error)}))}))),u},r.findDocumentsById=async function(n,a){for(var r=this.internals.shardInstances,s=r.length,i=new Array(s).fill(0).map((()=>[])),c=0;c<n.length;++c){var o=n[c];i[(0,t.getShardIndex)(s,o)].push(o)}var h=[];return await Promise.all(i.map(((n,t)=>{if(n.length>0)return r[t].findDocumentsById(n,a).then((n=>{(0,e.appendToArray)(h,n)}))}))),h},r.query=async function(n){var a=(0,t.prepareShardingQuery)(this.schema,n.query),r=a.originalQuery;r.limit&&r.limit;var s=r.skip?r.skip:0;var i=(0,e.getSortComparator)(this.schema,a.originalQuery),c=[];return await Promise.all(this.internals.shardInstances.map((async e=>{var n=await e.query(a.parentPreparedQuery);c=(0,t.mergeSortedArray)(c,n.documents,i)}))),c=c.slice(s),r.limit&&(c=c.slice(0,r.limit)),{documents:c}},r.count=async function(e){for(var n=(0,t.prepareShardingQuery)(this.schema,e.query),a=await Promise.all(this.internals.shardInstances.map((async(e,t)=>(await e.count(n.parentPreparedQuery)).count))),r=0,s=a.length;s--;)r+=a[s];return{count:r,mode:"fast"}},r.getChangedDocumentsSince=async function(n,t){for(var a=this.internals.shardInstances,r=t?(0,e.flatClone)(t):{},s=await Promise.all(a.map((async(t,a)=>{var s=r[a];return await(0,e.getChangedDocumentsSince)(t,n,s)}))),i=[],c=0,o=0;o<s.length&&c!==n;){var h=s[o],l=h.documents.length;if(c+l<=n)c+=l,i.push({checkpoint:h.checkpoint,documents:h.documents,shardIndex:o});else{var u=n-c,m=await(0,e.getChangedDocumentsSince)(a[o],u,r[o]);c+=m.documents.length,i.push({checkpoint:m.checkpoint,documents:m.documents,shardIndex:o})}o++}var d=[];return i.forEach((e=>{d=d.concat(e.documents),r[e.shardIndex]=e.checkpoint})),{documents:d=d.sort(((e,n)=>e._meta.lwt-n._meta.lwt)),checkpoint:r}},r.getAttachmentData=function(e,n,a){var r=(0,t.getShardIndex)(this.internals.shardInstances.length,e);return this.internals.shardInstances[r].getAttachmentData(e,n,a)},r.changeStream=function(){return this.changes$.asObservable()},r.cleanup=async function(e){return!(await Promise.all(this.internals.shardInstances.map((n=>n.cleanup(e))))).find((e=>!1===e))},r.close=function(){return this.changes$.complete(),Promise.all(this.internals.shardInstances.map((e=>e.close()))).then((()=>{}))},r.remove=function(){return this.changes$.complete(),Promise.all(this.internals.shardInstances.map((e=>e.remove()))).then((()=>{}))},r.conflictResultionTasks=function(){var e=this.internals.shardInstances.map((e=>e.conflictResultionTasks()));return(0,n.merge)(...e)},r.resolveConflictResultionTask=function(e){return Promise.all(this.internals.shardInstances.map((n=>n.resolveConflictResultionTask(e)))).then((()=>{}))},a}();