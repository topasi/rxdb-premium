Object.defineProperty(exports,"__esModule",{value:!0}),exports.cleanupNonCleanedBlocks=t;var e=require("rxdb/plugins/core"),a=require("./helper.js");async function t(t){return await t.internals.initDonePromise,t.writeQueue=t.writeQueue.then((async()=>{var r=t.internals.blockMap,n=t.primaryPath;if(0===r.cleanup.size)return!1;var i=Array.from(r.cleanup.entries());r.cleanup.clear();var o=await t.internals.persistentInstancePromise,l=await(0,a.getNonCleanedUpBlocks)(o);if(!l[0])return!1;for(var s=async function(){var a=i[c],r=a[1],l=await(0,e.getSingleDocument)(o,a[0]);if(!l)return 0;var s=!1,u=l.d.filter((e=>{var a=e[n];return!r.has(a)||(s=!0,!1)}));if(!s)return 0;var d=(0,e.flatCloneDocWithMeta)(l);d.d=u,d._rev=(0,e.createRevision)(t.databaseInstanceToken,d),d._meta.lwt=(0,e.now)(),await o.bulkWrite([{document:d,previous:l}],"memory-mapped-cleanup-blocks-single-block")},c=0;c<i.length;c++)await s();for(var u=[],d=new Set,p=[],v=0;v<l.length;v++){var m=l[v];p.push(m.id);for(var w=0;w<m.d.length;w++){var f=m.d[w],h=f[n];d.has(h)||(d.add(h),u.push(f))}}var k={id:await(0,a.getNextBlockId)(t),_deleted:!1,_attachments:{},_meta:{lwt:(0,e.now)()},s:p,_rev:(0,e.createRevision)(t.databaseInstanceToken),c:!0,d:u};return await(0,e.writeSingle)(o,{document:k},"memory-mapped-cleanup-blocks"),await o.bulkWrite(l.map((a=>{var r=(0,e.flatCloneDocWithMeta)(a);return r._rev=(0,e.createRevision)(t.databaseInstanceToken,a),r._deleted=!0,r._meta.lwt=(0,e.now)(),r.c=!0,{previous:a,document:r}})),"memory-mapped-cleanup-blocks-old-ones"),!0})),t.writeQueue}