Object.defineProperty(exports,"__esModule",{value:!0}),exports.MemoryMappedRxStorageInstance=void 0;var e=require("rxdb/plugins/core"),t=require("rxjs"),n=require("./helper.js"),i=require("./cleanup.js");exports.MemoryMappedRxStorageInstance=function(){function s(t,n,i,s,a,r,o,l){if(this.closed=!1,this.writeQueue=e.PROMISE_RESOLVE_VOID,this.writeTasks=[],this.storage=t,this.databaseName=n,this.collectionName=i,this.databaseInstanceToken=s,this.schema=a,this.internals=r,this.options=o,this.devMode=l,this.primaryPath=(0,e.getPrimaryFieldOfPrimaryKey)(this.schema.primaryKey),a.attachments)throw new Error("Attachments are not supported in the memory-mapped storage because storing attachments in memory would have bad performance")}var a=s.prototype;return a.bulkWrite=async function(t,i){var s=this.primaryPath;await this.internals.initDonePromise;var a=this.internals.memoryInstance.bulkWrite(t,i);return this.writeTasks.push(a.then((n=>(0,e.getWrittenDocumentsFromBulkWriteResponse)(s,t,n)))),this.writeQueue=this.writeQueue.then((async()=>{if(0!==this.writeTasks.length){this.storage.settings.awaitWritePersistence||await(0,e.requestIdlePromiseNoQueue)();var t=this.writeTasks;this.writeTasks=[];for(var a=await Promise.all(t),r=[],o=0;o<a.length;o++){var l=a[o];if(0===l.length)return;for(var h=await(0,n.getNextBlockId)(this),c=this.internals.blockMap,u=0;u<l.length;u++){var m=l[u][s];c.set(m,h)}r.push({document:{id:h,c:!1,s:[],d:l,_attachments:{},_deleted:!1,_meta:{lwt:(0,e.now)()},_rev:(0,e.createRevision)(this.databaseInstanceToken)}})}var d=await this.internals.persistentInstancePromise;if(r.length>0){var w=await d.bulkWrite(r,i);if(w.error[0])throw w.error[0]}}})),this.storage.settings.awaitWritePersistence&&await this.writeQueue,a},a.findDocumentsById=async function(e,t){return await this.internals.initDonePromise,this.internals.memoryInstance.findDocumentsById(e,t)},a.query=async function(e){return await this.internals.initDonePromise,await this.internals.memoryInstance.query(e)},a.count=async function(e){return await this.internals.initDonePromise,this.internals.memoryInstance.count(e)},a.getAttachmentData=async function(e,t,n){return await this.internals.initDonePromise,this.internals.memoryInstance.getAttachmentData(e,t,n)},a.changeStream=function(){var n=!1;return this.internals.initDonePromise.then((()=>n=!0)),this.internals.memoryInstance.changeStream().pipe((0,t.filter)((()=>!!n)),(0,t.shareReplay)(e.RXJS_SHARE_REPLAY_DEFAULTS))},a.cleanup=async function(e){if(await this.internals.initDonePromise,await(0,i.cleanupNonCleanedBlocks)(this))return!1;var[t,n]=await Promise.all([this.internals.memoryInstance.cleanup(e),this.internals.persistentInstancePromise.then((t=>t.cleanup(e)))]);return t&&n},a.close=async function(){await this.internals.initDonePromise,await this.writeQueue,await(0,i.cleanupNonCleanedBlocks)(this),this.internals.refCount=this.internals.refCount-1,0===this.internals.refCount&&(this.storage.openInstances.delete(this.internals.cacheKey),await Promise.all([this.internals.memoryInstance.close(),this.internals.persistentInstancePromise.then((e=>e.close()))]),this.internals.leaderElector&&(this.internals.leaderElector.die(),this.internals.leaderElector.broadcastChannel.close()))},a.remove=async function(){await this.internals.initDonePromise,this.storage.openInstances.delete(this.internals.cacheKey),await this.writeQueue,await Promise.all([this.internals.memoryInstance.remove(),this.internals.persistentInstancePromise.then((e=>e.remove()))]),this.internals.leaderElector&&(this.internals.leaderElector.die(),this.internals.leaderElector.broadcastChannel.close())},a.conflictResultionTasks=function(){return this.internals.conflictResultionTasks$.asObservable()},a.resolveConflictResultionTask=function(t){return e.PROMISE_RESOLVE_VOID},s}();