Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractFile=void 0;var e=require("rxdb/plugins/core"),t=require("./task-queue.js"),r=require("./file-helpers.js"),a=require("./helpers.js"),i=new TextDecoder,n=new TextEncoder;exports.AbstractFile=function(){function s(t,r,a){this.fileHandle=t,this.headerSize=r,this.cells=a,this.cellSizes=a.map((e=>e.length)),this.rowLength=(0,e.sumNumberArray)(this.cellSizes)}var h=s.prototype;return h.getAccessHandle=function(e){return this.fileHandle.then((r=>(0,t.getAccessHandle)(r,e)))},h.readHeader=async function(e){var t=await this.getAccessHandle(e),r=await t.read(0,this.headerSize);if(r.find((e=>0!==e))){var a=i.decode(r).trim();return JSON.parse(a)}},h.writeHeader=async function(e,t){var r=n.encode(JSON.stringify(t).padStart(this.headerSize," ")),a=await this.getAccessHandle(e),i=await a.getWritable();await i.write(r,{at:0})},h.readRows=async function(e,t,a){var i=await this.getAccessHandle(e),n=this.headerSize+t*this.rowLength,s=await(0,r.readFileContent)(i,n);(0,r.iterateStringCells)(s,this.cellSizes,(e=>{var t=this.cells.map(((t,r)=>{var a=e[r];if("number"===t.type)return parseInt(a,10);if("string"===t.type)return a;throw new Error("unknown type "+t.type)}));a(t)}))},h.getRowString=function(e){for(var t="",r=this.cells,i=r.length,n=0;n<i;n++){var s=r[n],h=e[n];"number"===s.type?t+=(0,a.toPaddedString)(h,r[n].length):t+=h}return t},h.appendRows=async function(e,t){var r=await this.getAccessHandle(e),a=await r.getSize();a<this.headerSize&&(a=this.headerSize);for(var i="",s=this.rowLength,h=t.length,c=0;c<h;c++){var o=t[c],l=this.getRowString(o);if(l.length!==s)throw new Error("rowString has wrong length ("+l.length+")");i+=l}var d=n.encode(i),w=await r.getWritable();return await w.write(d,{at:a}),{startPosition:a}},h.replaceContent=async function(e,t){var r=await this.getAccessHandle(e),a=t.map((e=>this.getRowString(e))).join(""),i=n.encode(a),s=await r.getWritable();await s.write(i,{at:this.headerSize});var h=this.headerSize+a.length;await r.truncate(h)},h.empty=async function(e){var t=await this.getAccessHandle(e);await t.truncate(this.headerSize)},s}();