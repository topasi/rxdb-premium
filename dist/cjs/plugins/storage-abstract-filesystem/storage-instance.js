Object.defineProperty(exports,"__esModule",{value:!0}),exports.RxStorageInstanceAbstractFilesystem=void 0,exports.createAbstractFilesystemStorageInstance=g;var e=require("rxdb/plugins/core"),t=require("rxjs"),s=require("./helpers.js"),a=require("./bulk-write.js"),n=require("./find-by-ids.js"),i=require("./task-queue.js"),r=require("./query.js"),u=require("./get-changed-documents-since.js"),c=require("./cleanup.js"),o=require("./tests.js"),h=require("./count.js"),l=require("./attachments.js"),d=(0,e.now)(),m=exports.RxStorageInstanceAbstractFilesystem=function(){function s(s,a,n,i,r,u,c,o,h){this.changes$=new t.Subject,this.instanceId=d++,this.readQueueEntries=[],this.storage=s,this.databaseName=a,this.collectionName=n,this.schema=i,this.internals=r,this.options=u,this.settings=c,this.databaseInstanceToken=o,this.jsonPositionSize=h,this.primaryPath=(0,e.getPrimaryFieldOfPrimaryKey)(this.schema.primaryKey),this.taskQueue=r.taskQueue}var o=s.prototype;return o.bulkWrite=function(e,t){return this.taskQueue.runWrite((async s=>(0,a.bulkWrite)(s,this,e,t)))},o.findDocumentsById=async function(e,t){return this.taskQueue.runRead((s=>(0,n.findDocumentsByIds)(this,e,t,s)))},o.query=function(e){return this.taskQueue.runRead((async t=>(0,r.abstractFilesystemQuery)(this,e,t)))},o.count=async function(e){return e.queryPlan.selectorSatisfiedByIndex?this.taskQueue.runRead((async t=>await(0,h.abstractFilesystemCount)(this,e,t))):{count:(await this.query(e)).documents.length,mode:"slow"}},o.getAttachmentData=function(e,t,s){return this.taskQueue.runRead((async a=>(0,l.getAttachmentData)(a,this,e,t,s)))},o.getChangedDocumentsSince=function(e,t){return this.taskQueue.runRead((async s=>(0,u.getChangedDocumentsSince)(this,s,e,t)))},o.changeStream=function(){return this.changes$.pipe((0,t.shareReplay)(e.RXJS_SHARE_REPLAY_DEFAULTS))},o.cleanup=function(e){return this.taskQueue.runWrite((async t=>await(0,c.cleanup)(this,t,e)))},o.close=async function(){return this.closed||(this.closed=(async()=>{var e=await this.internals.statePromise;await this.taskQueue.awaitIdle(),e.broadcastChannelMessages$.complete(),this.changes$.complete()})()),this.closed},o.remove=async function(){if(this.closed)throw new Error("instance is closed "+this.databaseName+"-"+this.collectionName);await this.taskQueue.awaitIdle(),await this.close(),await this.taskQueue.runWrite((async e=>{var t=await this.internals.statePromise,s=[t.documentFileHandle,t.changelogFile.fileHandle];for(var a of t.indexStates)s.push(a.fileHandle);await Promise.all(s.map((async t=>{var s=await t,a=await(0,i.getAccessHandle)(s,e);await a.truncate(0)})))}))},o.conflictResultionTasks=function(){return(new t.Subject).asObservable()},o.resolveConflictResultionTask=function(t){return e.PROMISE_RESOLVE_VOID},s}(),y=!1;async function g(e,t,n){!y&&t.devMode&&(y=!0,await(0,o.runBasicsTests)(e.abstractFilesystem,e.abstractLock));var r=(0,i.getLockId)(t),u=new i.TaskQueue(r,e.abstractLock),c={taskQueue:u,statePromise:(0,s.getStorageInstanceInternalState)(e.abstractFilesystem,t,u,e.jsonPositionSize)},h=new m(e,t.databaseName,t.collectionName,t.schema,c,t.options,n,t.databaseInstanceToken,e.jsonPositionSize);return c.statePromise.then((e=>{u.beforeTaskReadOrWrite.push((t=>(0,a.processChangesFileIfRequired)(t,e,h,!1)))})),c.statePromise.then((e=>{e.broadcastChannelMessages$.subscribe((async t=>{if("event"===t.type)t.changelogOperations.forEach((t=>{var s=t[0];e.indexStates[s].runChangelogOperation(t)})),t.eventBulk&&h.changes$.next(t.eventBulk);else{if("pre-write"!==t.type)throw new Error("BroadcastChannelMessageChanges$: unknown type "+t);e.mightHaveUnprocessedChanges=t.mightHaveUnprocessedChanges}}))})),h}