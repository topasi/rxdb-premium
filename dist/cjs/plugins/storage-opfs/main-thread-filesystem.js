Object.defineProperty(exports,"__esModule",{value:!0}),exports.MainThreadOPFSFilesystemWritable=exports.MainThreadOPFSFilesystemFileSyncAccessHandle=exports.MainThreadOPFSFilesystemFileHandle=exports.MainThreadOPFSFilesystemDirectory=exports.MainThreadOPFSFilesystem=void 0;exports.MainThreadOPFSFilesystem=function(){function t(){this.opfsRootPromise=navigator.storage.getDirectory()}return t.prototype.getDirectory=async function(){var t=await this.opfsRootPromise;return new e(t)},t}();var e=exports.MainThreadOPFSFilesystemDirectory=function(){function e(e){this.baseDir=e}var i=e.prototype;return i.getDirectoryHandle=async function(t,i){return new e(await this.baseDir.getDirectoryHandle(t,i))},i.getFileHandle=async function(e,i){var a=await this.baseDir.getFileHandle(e,i);return new t(e,a)},i.removeEntry=function(e){return this.baseDir.removeEntry(e)},e}(),t=exports.MainThreadOPFSFilesystemFileHandle=function(){function e(e,t){this.name=e,this.fileHandle=t}return e.prototype.createAccessHandle=async function(){return new i(this)},e}(),i=exports.MainThreadOPFSFilesystemFileSyncAccessHandle=function(){function e(e){this.fileHandle=e,this.filePromise=this.fileHandle.fileHandle.getFile()}var t=e.prototype;return t.getWritable=async function(){var e=await this.fileHandle.fileHandle.createWritable({keepExistingData:!0});return new a(this,e)},t.read=async function(e,t){var i=this.file;i||(i=await this.filePromise,this.file=i);var a=i.slice(e,t),n=await a.arrayBuffer();return new Uint8Array(n)},t.truncate=async function(e){var t=await this.fileHandle.fileHandle.createWritable({keepExistingData:!0});await t.truncate(e),await t.close()},t.getSize=async function(){return(await this.fileHandle.fileHandle.getFile()).size},t.close=function(){},e}(),a=exports.MainThreadOPFSFilesystemWritable=function(){function e(e,t){this.accessHandle=e,this.writable=t}var t=e.prototype;return t.write=async function(e,t){await this.writable.write({data:e,position:t.at,type:"write"});var i=this.writable.close();this.accessHandle.file=void 0,this.accessHandle.filePromise=i.then((()=>this.accessHandle.fileHandle.fileHandle.getFile())),await i},t.close=function(){this.writable.close()},e}();