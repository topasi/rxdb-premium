import{getRxStorageAbstractFilesystem as e}from"../storage-abstract-filesystem/index.js";import{promises as t}from"node:fs";import*as n from"node:fs";import*as i from"node:path";import*as r from"web-locks";import{DEFAULT_DOC_JSON_POSITION_SIZE as s}from"../storage-abstract-filesystem/helpers.js";export var RX_STORAGE_NAME_FILESYSTEM_NODE="filesystem-node";export function getRxStorageFilesystemNode(t){return e({name:RX_STORAGE_NAME_FILESYSTEM_NODE,abstractFilesystem:new NodeFilesystem(t.basePath),abstractLock:r.locks,inWorker:!1,jsonPositionSize:s})}export var NodeFilesystem=function(){function e(e){this.basePath=e}return e.prototype.getDirectory=async function(){return Promise.resolve(new NodeFilesystemDirectory(this.basePath))},e}();export var NodeFilesystemDirectory=function(){function e(e){this.dirPath=e}var r=e.prototype;return r.getDirectoryHandle=async function(n,r){var s=i.join(this.dirPath,n);return r.create&&await t.mkdir(s,{recursive:!0}),new e(s)},r.getFileHandle=async function(e,t){var r=i.join(this.dirPath,e);return t.create&&!n.existsSync(r)&&await n.promises.writeFile(r,"","utf-8"),new NodeFilesystemFileHandle(e,r,t)},r.removeEntry=function(e){return t.unlink(i.join(this.dirPath,e))},e}();export var NodeFilesystemFileHandle=function(){function e(e,t,n){this.name=e,this.filepath=t,this.options=n}return e.prototype.createAccessHandle=async function(){if(!this.options.create&&!n.existsSync(this.filepath))throw new Error("File does not exist "+this.filepath);var e=(this.options.create,"r+"),i=await t.open(this.filepath,e);return new NodeFilesystemFileSyncAccessHandle(this,i)},e}();export var NodeFilesystemFileSyncAccessHandle=function(){function e(e,t){this.fileHandle=e,this.nodeOpenHandle=t}var t=e.prototype;return t.getWritable=function(){return new NodeFilesystemWritable(this)},t.read=async function(e,t){t||(t=await this.getSize());var n=new Uint8Array(t-e);return await this.nodeOpenHandle.read({buffer:n,offset:0,position:e}),n},t.truncate=function(e){return this.nodeOpenHandle.truncate(e)},t.getSize=async function(){return(await this.nodeOpenHandle.stat()).size},t.close=function(){return this.nodeOpenHandle.close()},e}();export var NodeFilesystemWritable=function(){function e(e){this.accessHandle=e}var t=e.prototype;return t.write=function(e,t){return this.accessHandle.nodeOpenHandle.write(e,0,e.length,t.at).then((()=>this.flush()))},t.flush=function(){return this.accessHandle.nodeOpenHandle.sync()},t.close=function(){this.accessHandle.nodeOpenHandle.close()},e}();