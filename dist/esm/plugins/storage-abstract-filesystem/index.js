import{ensureRxStorageInstanceParamsAreCorrect as r}from"rxdb/plugins/core";import{checkVersion as t}from"../../plugins/shared/version-check.js";import{createAbstractFilesystemStorageInstance as e}from"./storage-instance.js";import{map as s}from"rxjs";import{RXDB_PREMIUM_VERSION as i}from"../shared/rxdb-premium-version.js";import{DEFAULT_DOC_JSON_POSITION_SIZE as o}from"./helpers.js";export var RxStorageAbstractFilesystem=function(){function o(r,t,e,s,o){this.rxdbVersion=i,this.name=r,this.abstractFilesystem=t,this.abstractLock=e,this.inWorker=s,this.jsonPositionSize=o}return o.prototype.createStorageInstance=async function(i){r(i),t();var o=await e(this,i,{});if(!this.inWorker){["findDocumentsById","query","bulkWrite"].forEach((r=>{var t=o[r].bind(o);o[r]=async(r,e,s,i,o)=>{var n=await t(r,e,s,i,o);return"string"==typeof n&&(n=JSON.parse(n)),n}}));var n=o.changeStream.bind(o);o.changeStream=()=>n().pipe(s((r=>("string"==typeof r&&(r=JSON.parse(r)),r))))}return o},o}();export function getRxStorageAbstractFilesystem(r){return new RxStorageAbstractFilesystem(r.name,r.abstractFilesystem,r.abstractLock,!!r.inWorker&&r.inWorker,r.jsonPositionSize?r.jsonPositionSize:o)}