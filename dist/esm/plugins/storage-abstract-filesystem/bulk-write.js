import{categorizeBulkWriteRows as e,ensureNotFalsy as a,now as t}from"rxdb/plugins/core";import{broadcastChangelogOperations as n,getTotalDocumentCount as s}from"./helpers.js";import{getAccessHandle as i}from"./task-queue.js";import{DECODER as r,ENCODER as o,writeDocumentRows as h}from"./documents-file.js";import{findDocumentsByIdsInternal as c}from"./find-by-ids.js";import{addChangelogOperations as l}from"./changelog.js";import{appendAttachmentFiles as d,clearDeletedAttachments as m}from"./attachments.js";export async function bulkWrite(n,r,h,l){var m=r.primaryPath,p=!!r.schema.attachments,g=await r.internals.statePromise,w=[],u=i(g.changesFileHandle,n).then((e=>e.getWritable())),f=h.map((e=>e.document[m])),v=s(g)>0?await c(r,f,n):new Map,C=e(r,m,v,h,l),H=C.eventBulk.events;if(w=C.errors,H.length>0){var b=a(C.newestRow).document;a(b),C.eventBulk.checkpoint={id:b[m],lwt:b._meta.lwt},g.mightHaveUnprocessedChanges=!0,g.broadcastChannel&&g.broadcastChannel.postMessage({type:"pre-write",mightHaveUnprocessedChanges:!0}),p&&await d(n,r,C,g),C.eventBulk.endTime=t();var x=JSON.stringify(C.eventBulk),F=o.encode(x),k=await u,y=k.write(F,{at:0});r.changes$.next(x),n.awaitBeforeFinish.push((()=>processChangesFileIfRequired(n,g,r,!0))),await y,k.flush&&await k.flush()}return{error:w}}export async function processChangesFileIfRequired(e,a,t,s=!1){if(a.mightHaveUnprocessedChanges){var o=await i(a.changesFileHandle,e),c=await o.getSize();if(0!==c){var d=await o.read(0,c),p=r.decode(d),g=JSON.parse(p),w=g.events,u=await i(a.documentFileHandle,e),f=await h(e,a.documentFileHandle,w);await u.close(),await m(e,t,a,g),s||t.changes$.next(g);for(var v=[],C=0;C<a.indexStates.length;C++){a.indexStates[C].appendWriteOperations(w,f,v)}await l(e,a.changelogFile,v,a.maxIndexableStringLength),n(t,a,v,g),await o.truncate(0),a.mightHaveUnprocessedChanges=!1,a.broadcastChannel&&a.broadcastChannel.postMessage({type:"pre-write",mightHaveUnprocessedChanges:!1})}else a.mightHaveUnprocessedChanges=!1}}