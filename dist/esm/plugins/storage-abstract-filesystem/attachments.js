import{attachmentWriteDataToNormalData as t,defaultHashSha256 as a,ensureNotFalsy as e}from"rxdb/plugins/core";import{getAccessHandle as n}from"./task-queue.js";import{DECODER as c,ENCODER as i}from"./documents-file.js";export async function appendAttachmentFiles(a,e,c,m){if(e.schema.attachments){var r=c.attachmentsAdd.concat(c.attachmentsUpdate);0!==r.length&&await Promise.all(r.map((async e=>{var c=await getAttachmentFilename(e.documentId,e.attachmentId,t(e.attachmentData).digest),r=await m.dirHandle.getFileHandle(c,{create:!0}),d=await n(r,a);await d.truncate(0);var s=i.encode(e.attachmentData.data),o=await d.getWritable();await o.write(s,{at:0}),o.flush&&await o.flush(),await o.close()})))}}export async function clearDeletedAttachments(t,a,n,c){if(a.schema.attachments){var i=[];c.events.forEach((t=>{t.previousDocumentData&&Object.keys(t.previousDocumentData._attachments).forEach((a=>{t.documentData._attachments[a]&&!t.documentData._deleted||i.push({documentId:t.documentId,attachmentId:a,digest:e(t.previousDocumentData)._attachments[a].digest})}))})),0!==i.length&&await Promise.all(i.map((async t=>{var a=await getAttachmentFilename(t.documentId,t.attachmentId,t.digest),e=await n.dirHandle.getFileHandle(a,{create:!0});await n.dirHandle.removeEntry(e.name)})))}}export async function getAttachmentData(t,a,e,i,m){var r=await a.internals.statePromise,d=await getAttachmentFilename(e,i,m),s=await r.dirHandle.getFileHandle(d,{create:!1}),o=await n(s,t),l=await o.read(0);return c.decode(l)}export async function getAttachmentFilename(t,e,n){return"z-attachment-"+(await a(t+"||"+e)).slice(0,20)+"-"+n.slice(0,20)+".txt"}