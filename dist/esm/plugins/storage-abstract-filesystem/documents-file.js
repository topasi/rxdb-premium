import{appendToArray as e,batchArray as t,ensureNotFalsy as r,getFromMapOrThrow as n,lastOfArray as a}from"rxdb/plugins/core";import{getAccessHandle as o}from"./task-queue.js";import{getTotalDocumentCount as i}from"./helpers.js";export var DECODER=new TextDecoder;export var ENCODER=new TextEncoder;export async function writeDocumentRows(e,t,r){for(var n=[],a=await o(t,e),i=await a.getSize(),s=[],c=0,u=i,h=r.length,l=0;l<h;l++){var g=r[l].documentData,v=JSON.stringify(g),f=u,p=ENCODER.encode(v);s.push(p);var w=p.byteLength;c+=w;var m=u+=w;n.push([f,m])}for(var D=new Uint8Array(c),d=0,y=0;y<s.length;y++){var x=s[y];D.set(x,d),d+=x.byteLength}var C=await a.getWritable();return await C.write(D,{at:i}),n}export async function getDocumentsJson(r,n,a,o){var i=[],s=t(o,1e3);return await Promise.all(s.map((async t=>{var o=await getDocumentsJsonString(r,n,a,t),s=JSON.parse(o);0===i.length?i=s:e(i,s)}))),i}async function s(e,t,r,n){if(!t.wholeDocumentsFileContent){var a=.15;if(i(e)*a<n&&i(e)>1){var o=await r.read(0);t.wholeDocumentsFileContent=o}}}export var COMMA_AS_UINT8=ENCODER.encode(",");export async function getDocumentsJsonString(e,t,r,a){await s(e,r,t,a.length);var o=a.length,i=r.wholeDocumentsFileContent;if(i){for(var u="",h=0;h<o;h++){var l=a[h];u+=DECODER.decode(i.slice(l[2],l[3])),h!==o-1&&(u+=",")}return"["+u+"]"}var g=new Map,v=batchIndexRowReads(a,25),f=o-1;await Promise.all(v.map((async e=>{var r=await c(t,e,g);f+=r})));for(var p=new Uint8Array(f),w=0,m=0;m<o;m++){var D=a[m],d=n(g,D);p.set(d,w),w+=d.byteLength,m!==o-1&&(p.set(COMMA_AS_UINT8,w),w+=COMMA_AS_UINT8.byteLength)}return"["+DECODER.decode(p)+"]"}async function c(e,t,n){for(var o=t[0][2],i=r(a(t))[3],s=await e.read(o,i),c=0,u=0;u<t.length;u++){var h=t[u],l=s.slice(h[2]-o,h[3]-o);c+=l.byteLength,n.set(h,l)}return c}export function sortCompareIndexRowsByPosition(e,t){return e[2]<t[2]?-1:e[2]>t[2]?1:0}export function getAverageDocSize(e,t){var r=[];if(e.length>=t)r=e.slice();else for(;r.length<t;){var n=u(e);r.push(n)}var a=0;return r.forEach((e=>a+=e[3]-e[2])),a/r.length}export function batchIndexRowReads(e,t){for(var r=e.slice(0).sort(sortCompareIndexRowsByPosition),n=getAverageDocSize(e,5),o=[],i=[],s=0;s<r.length;s++){var c=r[s];if(0!==i.length){var u=a(i);c[2]-u[3]<t*n?i.push(c):(o.push(i),i=[c])}else i.push(c)}return i.length>0&&o.push(i),o}function u(e){return e[Math.floor(Math.random()*e.length)]}