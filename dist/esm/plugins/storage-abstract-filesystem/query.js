import{ensureNotFalsy as e,getQueryMatcher as r,getSortComparator as s,getStartIndexStringFromLowerBound as i,getStartIndexStringFromUpperBound as t}from"rxdb/plugins/core";import{getIndexName as a}from"../storage-indexeddb/index.js";import{getAccessHandle as o}from"./task-queue.js";import{boundGE as n,boundGT as m,boundLE as l,boundLT as u}from"rxdb/plugins/storage-memory";import{getDocumentsJson as d,getDocumentsJsonString as c}from"./documents-file.js";import{compareIndexRows as f}from"./helpers.js";export async function abstractFilesystemQuery(p,v,h){var y=await p.internals.statePromise,w=v.queryPlan.index.slice(0),g=a(w),x=e(y.indexStates.find((e=>e.name===g)));if(0===x.rows.length)return{documents:[]};var b=v.queryPlan,q=v.query,k=q.skip?q.skip:0,P=k+(q.limit?q.limit:1/0),j=!1;b.selectorSatisfiedByIndex||(j=r(p.schema,v.query));var S=!b.sortSatisfiedByIndex,B=b.startKeys,F=i(p.schema,w,B),I=b.endKeys,K=t(p.schema,w,I),E=(b.inclusiveStart?n:m)(x.rows,[F],f),H=(b.inclusiveEnd?l:u)(x.rows,[K],f),Q=await o(y.documentFileHandle,h),z=[];if(j)for(var A=!1;!A;){var C=x.rows[E];if(!C||E>H)break;var D=(await d(y,Q,h,[C]))[0];j(D)&&z.push(D),(z.length>=P&&!S||E>=x.rows.length)&&(A=!0),E++}else{for(var G=[],J=!1;!J;){var L=x.rows[E];if(!L||E>H)break;G.push(L),(z.length>=P&&!S||E>=x.rows.length)&&(J=!0),E++}if(!S){var M=(G=G.slice(k,P)).length>0?await c(y,Q,h,G):"[]";return Promise.resolve('{"documents": '+M+"}")}z=await d(y,Q,h,G)}if(S){var N=s(p.schema,v.query);z=z.sort(N)}return z=z.slice(k,P),Promise.resolve({documents:z})}