import{signal as i}from"@preact/signals-core";export var PREACT_SIGNAL_STATE={subscribeCount:0,signalBySubscription:new WeakMap,aliveSubscription:new Set};function e(i){PREACT_SIGNAL_STATE.aliveSubscription.has(i)&&(PREACT_SIGNAL_STATE.aliveSubscription.delete(i),PREACT_SIGNAL_STATE.signalBySubscription.delete(i),PREACT_SIGNAL_STATE.subscribeCount=PREACT_SIGNAL_STATE.subscribeCount-1,i.unsubscribe())}function r(i){e(i)}var s=new FinalizationRegistry(r);export var PreactSignalsRxReactivityFactory={fromObservable(r,A){var T=i(A),t=new WeakRef(T),S=r.subscribe((i=>{var r=PREACT_SIGNAL_STATE.signalBySubscription.get(S);r&&t.deref()?r.value=i:e(S)}));return PREACT_SIGNAL_STATE.aliveSubscription.add(S),PREACT_SIGNAL_STATE.signalBySubscription.set(S,T),PREACT_SIGNAL_STATE.subscribeCount=PREACT_SIGNAL_STATE.subscribeCount+1,s.register({},S),T}};