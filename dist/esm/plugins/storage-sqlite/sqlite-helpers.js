import{PROMISE_RESOLVE_VOID as e,promiseWait as t,errorToPlainJson as n,getPrimaryFieldOfPrimaryKey as r,clone as a}from"rxdb/plugins/core";import{mangoQuerySelectorToSQL as o,mangoQuerySortToSQL as i}from"./sqlite-query.js";export var NON_IMPLEMENTED_OPERATOR_QUERY_BATCH_SIZE=50;var s=new Map;export var RX_STORAGE_NAME_SQLITE="sqlite";export var SQLITE_VARIABLES_LIMIT=999;export function attachmentRowKey(e,t){return e+"||"+t}export var SQLITE_IN_MEMORY_DB_NAME=":memory:";export function getDatabaseConnection(e,t){var n=s.get(t);if(n){if(n.sqliteBasics!==e&&t!==SQLITE_IN_MEMORY_DB_NAME)throw new Error("opened db with different creator method "+t+" "+n.sqliteBasics.debugId+" "+e.debugId);n.openConnections=n.openConnections+1}else n={database:e.open(t).then((async t=>(e.journalMode&&await e.setPragma(t,"journal_mode",e.journalMode),t))),sqliteBasics:e,openConnections:1},s.set(t,n);return n.database}export async function closeDatabaseConnection(e,t){var n=s.get(e);if(n&&(n.openConnections=n.openConnections-1,0===n.openConnections))return s.delete(e),n.database.then((e=>t.close(e)))}var c="_";export function getIndexId(e,t,n,r){var a=r.map((e=>e.replace(/\./g,c+"dot"+c)));return"rxdb"+[e,t,n.version].join(c)+c+a.join(c)+c+"idx"}export function getDataFromResultRow(e){return e?Array.isArray(e)?e[4]?e[4]:e[0]:e.data:e}export function getSQLiteInsertSQL(e,t,n){return{query:"\n        INSERT INTO "+e+"(\n            id,\n            revision,\n            deleted,\n            lastWriteTime,\n            data\n        ) VALUES (\n            ?,\n            ?,\n            ?,\n            ?,\n            json(?)\n        );\n    ",params:[n[t],n._rev,n._deleted?1:0,n._meta.lwt,JSON.stringify(n)],context:{method:"getSQLiteInsertSQL",data:{collectionName:e,primaryPath:t}}}}export function getSQLiteUpdateSQL(e,t,n){var r=n.document;return{query:'\n    UPDATE "'+e+'"\n    SET \n        revision = ?,\n        deleted = ?,\n        lastWriteTime = ?,\n        data = json(?)\n    WHERE\n        id = ?\n    ',params:[r._rev,r._deleted?1:0,r._meta.lwt,JSON.stringify(r),r[t]],context:{method:"getSQLiteUpdateSQL",data:{tableName:e,primaryPath:t}}}}export function getJsonExtract(e,t){return e===t?"id":"_meta.lwt"===t?"lastWriteTime":"JSON_EXTRACT(data, '$."+t+"')"}export function getSQLiteFindByIdSQL(e,t,n){var r=n?"":" AND deleted = 0";return{query:'\n        SELECT * FROM "'+e+'"\n        WHERE id IN ('+new Array(t.length).fill(PARAM_KEY).join(", ")+")\n        "+r+";\n    ",params:t,context:{method:"getSQLiteFindByIdSQL",data:{tableName:e,docIds:t}}}}export function isPlainObject(e){return"object"==typeof e&&e.constructor==Object}var d=new WeakMap;export async function sqliteTransaction(t,n,r,a){var o=d.get(t);return o||(o=e),o=o.then((async()=>{await openSqliteTransaction(t,n);var e=await r();await finishSqliteTransaction(t,n,e,a)})),d.set(t,o),o}export async function openSqliteTransaction(e,r){for(var a=!1;!a;)try{await r.run(e,{query:"BEGIN;",params:[],context:{method:"openSqliteTransaction",data:""}}),a=!0}catch(e){console.log("open transaction error (will retry):");var o=n(e);if(console.log(o),console.dir(e),e.message&&(e.message.includes("Database is closed")||e.message.includes("API misuse")))throw e;await t(0)}}export function finishSqliteTransaction(e,t,n,r){return t.run(e,{query:n+";",params:[],context:{method:"finishSqliteTransaction",data:n}}).catch((e=>{throw r&&(console.error("cannot close transaction (mode: "+n+")"),console.log(JSON.stringify(r,null,4))),e}))}export var PARAM_KEY="?";export function ensureParamsCountIsCorrect(e){if(e.params.length!==e.query.split(PARAM_KEY).length-1)throw new Error("ensureParamsCountIsCorrect() wrong param count: "+JSON.stringify(e))}export function prepareSQLiteQuery(e,t){var n=r(e.schema.primaryKey),s=t.limit?"LIMIT "+t.limit:"LIMIT -1",c=t.skip?"OFFSET "+t.skip:"",d=[],l="",p=void 0,u="";t.index&&(u='INDEXED BY "'+getIndexId(e.databaseName,e.collectionName,e.schema,t.index)+'"');var m=i(n,t.sort);try{var E=o(e.schema,t.selector,d);l=u+" "+(E="()"!==E?" WHERE "+E+" ":"")+m+" "+s+" "+c+" ;"}catch(e){if(!e.isNonImplementedOperatorError)throw e;d=[],p=e.operator,l=u+" "+m+" LIMIT "+NON_IMPLEMENTED_OPERATOR_QUERY_BATCH_SIZE+" "}return{schema:e.schema,mangoQuery:a(t),sqlQuery:{query:l,params:d,context:{method:"prepareQuery",data:{}}},queryWithoutSort:l.replace(m," "),nonImplementedOperator:p}}export function boolParamsToInt(e){return e.map((e=>"boolean"==typeof e?e?1:0:e))}