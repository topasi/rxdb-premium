import{PROMISE_RESOLVE_VOID as r}from"rxdb/plugins/utils";import{getRxStorageRemote as e}from"rxdb/plugins/storage-remote";import{Subject as t}from"rxjs";export function getRxStorageSharedWorker(r){var t=getSharedWorkerStateByInput(r);return e(t)}export function getSharedWorkerStateByInput(e){return{identifier:"shared-worker-"+e.workerInput,mode:"one",messageChannelCreator:()=>{var o="function"==typeof e.workerInput?e.workerInput():new SharedWorker(e.workerInput,e.workerOptions);if(!(o instanceof SharedWorker))throw new Error("no SharedWorker given");var n=[];o.onerror=r=>{n.push(r)};var a=new t,s=r=>{var e=r.data;a.next(e)};return o.port.addEventListener("message",s),o.port.start(),Promise.resolve({messages$:a,send(r){o.port.postMessage(r)},close:()=>(o.port.removeEventListener("message",s),r)})}}}