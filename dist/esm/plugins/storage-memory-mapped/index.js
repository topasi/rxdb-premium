import{randomCouchString as e,flatClone as a,getPrimaryFieldOfPrimaryKey as t,prepareQuery as n,normalizeMangoQuery as r,lastOfArray as o,getFromMapOrThrow as s,promiseWait as i}from"rxdb/plugins/core";import{BroadcastChannel as c,createLeaderElection as d}from"broadcast-channel";import{getRxStorageMemory as m}from"rxdb/plugins/storage-memory";import{Subject as l}from"rxjs";import{checkVersion as p}from"../../plugins/shared/version-check.js";import{RXDB_PREMIUM_VERSION as h}from"../shared/rxdb-premium-version.js";import{getMemoryMappedPersistenceSchema as u,getNonCleanedUpBlocks as f}from"./helper.js";import{MemoryMappedRxStorageInstance as v}from"./memory-mapped-storage-instance.js";import{BlockMap as I}from"./block-map.js";var g=m();export var RxStorageMemoryMapped=function(){function t(e){this.name="memory-mapped",this.rxdbVersion=h,this.openInstances=new Map,this.settings=e}return t.prototype.createStorageInstance=async function(t){var n=[t.databaseName,t.collectionName,t.schema.version].join("-"+this.name+"-");if(this.openInstances.has(n)){var r=await s(this.openInstances,n);return r.internals.refCount=r.internals.refCount+1,r}var o=void 0,m=(async()=>{if(p(),t.devMode&&t.multiInstance){var r=n+"|"+this.settings.storage.name,s=new c(r);if(o=d(s),await Promise.race([i(3e3).then((()=>!0)),o.awaitLeadership().then((()=>!1))]))throw this.openInstances.delete(n),o.die(),s.close(),new Error("The memory-mapped RxStorage cannot be instantiated multiple times. Instead either set multiInstance:false or use the storage inside of the SharedWorker RxStorage.  https://rxdb.info/rx-storage-shared-worker.html ")}var m=t.databaseInstanceToken,h=a(t);h.schema=u(t.schema),h.multiInstance=!1;var f=this.settings.storage.createStorageInstance(h),y=a(t.schema);delete y.encrypted;var w={databaseName:t.databaseName,collectionName:t.collectionName+"-memory-mapped-instance"+e(12),schema:y,multiInstance:!1,databaseInstanceToken:m,options:t.options,devMode:t.devMode},x=await g.createStorageInstance(w),b=new I,M={persistentInstancePromise:f,cacheKey:n,refCount:1,leaderElector:o,conflictResultionTasks$:new l,memoryInstance:x,blockMap:b,initDonePromise:loadInitialData(await f,x,b)};return new v(this,t.databaseName,t.collectionName,m,t.schema,M,t.options,t.devMode)})().catch((e=>{throw this.openInstances.delete(n),o&&o.broadcastChannel.close(),e}));return this.openInstances.set(n,m),m},t}();export async function loadInitialData(e,a,s){var i,c=t(a.schema.primaryKey),d=a.internals,m=d.documents,l=Object.values(d.byIndex),p=l.length,h=l.map((e=>e.docsWithIndex)),u=l.map((e=>e.getIndexableString)),v=new Map;function I(e,a){m.set(a,e);for(var t=0;t<p;++t){var n=u[t](e);h[t].push([n,e,a])}}for(var[g,w]=await Promise.all([(async()=>{var a=await f(e),t=a[0];t&&(!i||t.id>i)&&(i=t.id);for(var n=new Set,r=0;r<a.length;r++)for(var o=a[r],d=o.d,m=o.id,l=0;l<d.length;l++){var p=d[l],h=p[c];n.has(h)?s.addCleanup(h,m):(I(p,h),n.add(h),s.add(h,m))}return{docsInCleanup:n,nonCleanedBlocks:a}})(),(async()=>{var a=await e.query(n(e.schema,r(e.schema,{selector:{c:{$eq:!0},_deleted:{$eq:!1}},sort:[{id:"asc"}]}))),t=o(a.documents);return t&&(!i||t.id>i)&&(i=t.id),a.documents})()]),x=g.docsInCleanup,b=0;b<w.length;b++)for(var M=w[b],k=M.d,S=M.id,C=0;C<k.length;C++){var j=k[C],N=j[c];x.has(N)?s.addCleanup(N,S):(s.add(N,S),I(j,N))}for(var R=0;R<p;++R){var B=l[R];B.docsWithIndex=B.docsWithIndex.sort(y)}return{lastBlockId:i,toCleanupByBlockId:v}}export function getMemoryMappedRxStorage(e){return new RxStorageMemoryMapped(e)}function y(e,a){return e[0]<a[0]?-1:1}