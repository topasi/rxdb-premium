import{INTERNAL_STORE_SCHEMA_TITLE as e,META_INSTANCE_SCHEMA_TITLE as t,randomCouchString as n}from"rxdb/plugins/core";export var DEFAULT_LOGGER_SETTINGS={prefix:void 0,times:!0,metaStorageInstances:!0,bulkWrite:!0,findDocumentsById:!0,query:!0,count:!0,info:!0,getAttachmentData:!0,getChangedDocumentsSince:!0,cleanup:!0,close:!0,remove:!0};export function wrappedLoggerStorage(a){var o=Object.assign({},DEFAULT_LOGGER_SETTINGS,a.settings?a.settings:{}),r=["RxDB",a.storage.name,o.prefix].filter((e=>!!e)).join(".");return Object.assign({},a.storage,{async createStorageInstance(i){var s=await a.storage.createStorageInstance(i);if(!o.metaStorageInstances&&(i.schema.title===e||i.schema.title===t))return s;async function c(e,t,c){if(!o[e])return await s[e](...t);var l="instance:"+i.databaseInstanceToken+"_opId:"+n(8),m=[r,i.databaseName,i.collectionName].join(".")+"."+e+"("+c+") "+l;a.onOperationStart&&a.onOperationStart(e,m,t),o.times&&console.time(m);try{return await s[e](...t)}catch(n){throw console.error(m+": ERROR: "+n.name),a.onOperationError&&a.onOperationError(e,m,t,n),n}finally{o.times&&console.timeEnd(m),a.onOperationEnd&&a.onOperationEnd(e,m,t)}}return{databaseName:s.databaseName,collectionName:s.collectionName,internals:s.internals,options:s.options,schema:s.schema,bulkWrite:(e,t)=>c("bulkWrite",[e,t],e.length.toString()),findDocumentsById:(e,t)=>c("findDocumentsById",[e,t],e.length.toString()),query:e=>c("query",[e],""),count:e=>c("count",[e],""),getAttachmentData:(e,t,n)=>c("getAttachmentData",[e,t,n],""),getChangedDocumentsSince:s.getChangedDocumentsSince?(e,t)=>c("getChangedDocumentsSince",[e,t],""):void 0,cleanup:e=>c("cleanup",[e],""),close:()=>c("close",[],""),remove:()=>c("remove",[],""),changeStream:()=>s.changeStream(),conflictResultionTasks:()=>s.conflictResultionTasks(),resolveConflictResultionTask:e=>s.resolveConflictResultionTask(e)}}})}