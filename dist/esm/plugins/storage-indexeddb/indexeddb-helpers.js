import{ensureNotFalsy as e,promiseWait as t,PROMISE_RESOLVE_VOID as n,INDEX_MIN as r,getFromMapOrCreate as a}from"rxdb/plugins/core";import{createIndexesOnStore as o,toIndexRow as s}from"./indexeddb-index-helpers.js";export var INDEXEDDB_DOCS_STORE_SUFFIX="documents";export var INDEXEDDB_DOCS_STORE_WAL_SUFFIX="wal";export var INDEXEDDB_DOCS_STORE_ATTACHMENTS_SUFFIX="attachments";export var TRANSACTION_SETTINGS={durability:"relaxed"};export var RX_STORAGE_NAME_INDEXEDDB="indexeddb";var i=0;export function attachmentObjectId(e,t){return e+"||"+t}var c=new Map;function d(t,r){var o=a(c,t,(()=>n));return o=e(o).then((()=>r())),c.set(t,o),o}async function u(e,n,r){var a=i++,o=await getIndexedDB(e,r.indexedDB),s=async()=>(await t(0),d(e.databaseName,(()=>new Promise(((t,n)=>{var r=o.open(e.databaseName);r.onerror=function(t){console.error(a+": OPEN IDB DATABASE "+e.databaseName+" ERROR"),n(t)},r.onsuccess=function(e){var n=r.result;t(n),m(c,n)},addStoresDuringOnUpgradeNeeded(c,r)}))))),c={indexedDB:o,debugId:a,closed:!1,storage:n,settings:r,refreshIDBDatabase:s,creationPromise:s(),name:e.databaseName,refCount:0,storesToOpen:[]};return c}function m(e,t){t.onversionchange=n=>{e.closed||(t.close(),e.creationPromise=e.refreshIDBDatabase())}}export async function getIndexedDBState(t,n,r,o){var s=await a(t.indexedDBStates,r.databaseName,(()=>u(r,t,n)));return s.storesToOpen=s.storesToOpen.concat(o),s.refCount=s.refCount+1,s.creationPromise.then((()=>openStoresOnExistingDatabase(e(s)))).then((()=>e(s)))}var l=0;export function getDatabaseAddStoresCount(){return l}export async function openStoresOnExistingDatabase(e){if(0!==e.storesToOpen.length)return e.creationPromise=e.creationPromise.then((async t=>{var n=new Set(Array.from(t.objectStoreNames));if(0===e.storesToOpen.filter((e=>!n.has(getStoreNamesForStorageInstance(e.collectionName,e.schema).documentStore))).length)return t;l+=1;var r=t.version+1;return t.close(),d(e.name,(()=>new Promise((async(t,n)=>{var a=e.indexedDB.open(e.name,r);a.onerror=function(t){console.error(e.debugId+": ERROR openStoresOnExistingDatabase() openRequest: error "),n(t)},a.onsuccess=function(n){var r=a.result;m(e,r),t(r)},a.onblocked=e=>{},addStoresDuringOnUpgradeNeeded(e,a)}))))})),e.creationPromise}export function getStoreNamesForStorageInstance(e,t){var n=t.version;return{documentStore:e+"-"+n+"-"+INDEXEDDB_DOCS_STORE_SUFFIX,writeAheadStore:e+"-"+n+"-"+INDEXEDDB_DOCS_STORE_WAL_SUFFIX,attachmentsStore:e+"-"+n+"-"+INDEXEDDB_DOCS_STORE_ATTACHMENTS_SUFFIX}}export function addStoresDuringOnUpgradeNeeded(e,t){t.onupgradeneeded=function(n){var r=t.result;e.storesToOpen.forEach((e=>{var t=r.objectStoreNames,n=getStoreNamesForStorageInstance(e.collectionName,e.schema);if(!t.contains(n.documentStore)){var a=r.createObjectStore(n.documentStore,{keyPath:"i",autoIncrement:!1});r.createObjectStore(n.writeAheadStore,{keyPath:"i",autoIncrement:!1}),o(a,e),e.schema.attachments&&r.createObjectStore(n.attachmentsStore,{keyPath:"docIdWithAttachmentId",autoIncrement:!1})}})),e.storesToOpen=[]}}export async function closeIndexedDBDatabase(e){if(!e.closed&&(e.refCount=e.refCount-1,0===e.refCount))return e.closed=!0,e.storage.indexedDBStates.delete(e.name),e.creationPromise.then((e=>e.close()))}export async function awaitCreationPromise(e){for(;;){var t=e.creationPromise;if(await e.creationPromise,t===e.creationPromise)return e.creationPromise}}export function ensureNotClosed(e){if(e.closed)throw new Error("RxStorageInstanceIndexedDB is closed "+e.databaseName+"-"+e.collectionName)}export async function ensureWalPersisted(e,t){var n=e.primaryPath,r=e.internals.indexIds.length,a=e.internals.getIndexableStringByIndexNumber,o=t.objectStore(e.internals.storeNames.writeAheadStore),i=await new Promise(((e,t)=>{var n=o.get("documents");n.onerror=t,n.onsuccess=t=>{var r=n.result;e(r?JSON.parse(r.docsData):void 0)}}));if(i&&i.length>0){for(var c,d=t.objectStore(e.internals.storeNames.documentStore),u=0;u<i.length;++u){var m=i[u],l=m[n],S=s(r,a,l,m);c=d.put(S)}await new Promise(((e,t)=>{c.onerror=t,c.onsuccess=()=>e(!0)})),o.delete("documents")}return t}export async function createTx(t){var n,r=[t.internals.storeNames.documentStore,t.internals.storeNames.writeAheadStore];t.schema.attachments&&r.push(t.internals.storeNames.attachmentsStore);for(var a=100;a>0;){var o=await t.internals.state.creationPromise;a-=1;try{n=o.transaction(r,"readwrite",TRANSACTION_SETTINGS)}catch(e){if("InvalidStateError"!==e.name&&"NotFoundError"!==e.name||!(a>0))throw e;"NotFoundError"===e.name?await openStoresOnExistingDatabase(t.internals.state):t.internals.state.creationPromise=t.internals.state.refreshIDBDatabase()}}return await ensureWalPersisted(t,e(n)),e(n)}export var IndexedDBTransactionScope=function(){function e(e){this.allTasksRuns=[],this.instance=e,this.txPromise=createTx(this.instance).then((t=>ensureWalPersisted(e,t)))}return e.prototype.addTask=function(e){var t=this.txPromise.then((t=>e(t))),n=t.catch((()=>null));this.allTasksRuns.push(n);var r=this.allTasksRuns.length;return n.then((()=>Promise.all(this.allTasksRuns))).then((()=>{this.allTasksRuns.length===r&&(this.instance.openReadonlyTransaction=void 0)})),t.catch((t=>{if("TransactionInactiveError"===t.name)return this.instance.openReadonlyTransaction=void 0,runReadTask(this.instance,e);throw t}))},e}();export function runReadTask(e,t){return e.openReadonlyTransaction||(e.openReadonlyTransaction=new IndexedDBTransactionScope(e)),e.openReadonlyTransaction.addTask(t)}export function countIndexedDBRows(e){var t=e.count();return new Promise((e=>{t.onsuccess=()=>{e(t.result)}}))}export function indexedDBHasAtLeastOneRow(e,t){var n=(e.settings.IDBKeyRange?e.settings.IDBKeyRange:IDBKeyRange).lowerBound(r,!0),a=t.getKey(n);return new Promise((e=>{a.onsuccess=()=>{e(!!a.result)}}))}export function getIndexedDBKeys(e){var t=e.getAllKeys();return new Promise((e=>{t.onsuccess=()=>{e(t.result)}}))}export function getIndexedDB(e,t){return"function"==typeof t?t(e):t}