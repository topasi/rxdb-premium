import{getStartIndexStringFromLowerBound as e,getStartIndexStringFromUpperBound as n,lastOfArray as t,getQueryMatcher as r,getSortComparator as s}from"rxdb/plugins/core";import{runReadTask as a}from"./indexeddb-helpers.js";import{getIndexId as i}from"./indexeddb-index-helpers.js";export async function queryIndexedDB(t,o){return a(t,(async a=>{var c=o.queryPlan,u=o.query,d=u.skip?u.skip:0,l=d+(u.limit?u.limit:1/0),y=t.internals.storeNames.documentStore,m=t.settings.batchSize?t.settings.batchSize:50,g=!1;c.selectorSatisfiedByIndex||(g=r(t.schema,u));var v,f=c.index,h=!c.sortSatisfiedByIndex,x=f,p=c.startKeys,B=e(t.schema,x,p),I=c.endKeys,b=n(t.schema,x,I),S=[],K=a.objectStore(y),w=i(t.internals,x);v=K.index(w),g||o.query.limit||(m=1e5);var D=!1;if(await runBatchedCursor(t,c,v,m,B,b,w,(e=>{for(var n=0;n<e.length;n++){var t=e[n].d;if(D||g&&!g(t)||S.push(t),!h&&S.length===l){D=!0;break}}return!D})),h){var P=s(t.schema,u);S=S.sort(P)}return{documents:S=S.slice(d,l)}}))}export async function runBatchedCursor(e,n,r,s,a,i,o,c){var u=e.settings.IDBKeyRange?e.settings.IDBKeyRange:IDBKeyRange,d=e.internals.getIndexableStringByIndexId[o];if("function"==typeof r.getAll&&1!==s)for(var l,y=!0,m=!1,g=async function(){l&&(a=d(l.d));var e=u.bound(a,i,!y||!n.inclusiveStart,!n.inclusiveEnd);y=!1;var o=r.getAll(e,s);await new Promise(((e,n)=>{o.onerror=n,o.onsuccess=n=>{var r=n.target.result;(l=t(r),0!==r.length)&&(!1===c(r)&&(m=!0));r.length<s&&(m=!0),e()}}))};!m;)await g();else{var v=u.bound(a,i,!n.inclusiveStart,!n.inclusiveEnd),f=r.openCursor(v);await new Promise((e=>{f.onsuccess=function(n){var t=n.target.result;if(t){var r=t.value;c([r])?t.continue():e()}else e()}}))}}export async function countIndexedDB(t,r){return a(t,(async s=>{var a,o,c=r.queryPlan,u=t.internals.storeNames.documentStore,d=c.index,l=d,y=c.startKeys,m=e(t.schema,l,y),g=c.endKeys,v=n(t.schema,l,g),f=s.objectStore(u);o=1===d.length&&d[0]===t.primaryPath?i(t.internals,["_deleted",t.primaryPath]):i(t.internals,l),a=f.index(o);var h=(t.settings.IDBKeyRange?t.settings.IDBKeyRange:IDBKeyRange).bound(m,v,!c.inclusiveStart,!c.inclusiveEnd),x=a.count(h);return{count:await new Promise(((e,n)=>{x.onsuccess=function(){e(x.result)},x.onerror=n})),mode:"fast"}}))}